name: Publish NuGet Packages

on:
  push:
    tags:
      - 'v*.*.*'

env:
  DOTNET_VERSION: '9.0'
  LIB_PATH: 'src/lib'
  NUGET_OUTPUT_DIR: 'nuget_packages'

# Explicitly declare permissions
permissions:
  contents: write  # Needed for checkout and creating branches
  pull-requests: write  # Needed for creating PRs

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository 🛎️
      uses: actions/checkout@v4

    - name: Extract version from tag 🏷️
      id: extract_version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Set up .NET 📦
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Find all project files 🔍
      id: find_projects
      run: |
        projects=$(find ${{ env.LIB_PATH }} -name "*.csproj" -type f)
        echo "Found projects:"
        echo "$projects"
        echo "projects<<EOF" >> $GITHUB_OUTPUT
        echo "$projects" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Update version in Directory.Build.props 🔄
      run: |
        sed -i "s/<Version>.*<\/Version>/<Version>${{ steps.extract_version.outputs.version }}<\/Version>/" ${{ env.LIB_PATH }}/Directory.Build.props

    - name: Restore dependencies 🔧
      run: dotnet restore ${{ env.LIB_PATH }}

    - name: Build all projects 🔨
      run: dotnet build ${{ env.LIB_PATH }} --configuration Release --no-restore

    - name: Create NuGet output directory �
      run: mkdir -p ${{ env.NUGET_OUTPUT_DIR }}

    - name: Pack all projects 📦
      run: |
        echo "Packing all projects in ${{ env.LIB_PATH }}..."
        find ${{ env.LIB_PATH }} -name "*.csproj" -type f | while read project; do
          echo "Packing: $project"
          dotnet pack "$project" --configuration Release --no-build --output ${{ env.NUGET_OUTPUT_DIR }}
        done

    - name: List generated packages 📋
      run: |
        echo "Generated NuGet packages:"
        ls -la ${{ env.NUGET_OUTPUT_DIR }}/*.nupkg

    - name: Publish to NuGet 🚀
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: |
        echo "Publishing packages to NuGet..."
        dotnet nuget push "${{ env.NUGET_OUTPUT_DIR }}/*.nupkg" --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Create branch and pull request 📂
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git checkout -b "release-v${{ steps.extract_version.outputs.version }}"
        git add ${{ env.LIB_PATH }}/Directory.Build.props
        git commit -m "Update version to ${{ steps.extract_version.outputs.version }}"
        git push origin "release-v${{ steps.extract_version.outputs.version }}"
        gh pr create --title "Release v${{ steps.extract_version.outputs.version }}" --body "This PR updates the version to v${{ steps.extract_version.outputs.version }} for all library packages" --base main --head "release-v${{ steps.extract_version.outputs.version }}"