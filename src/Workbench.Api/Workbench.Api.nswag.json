{
  "x-generator": "NSwag v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "OpenBanking Workbench API",
    "version": "v1"
  },
  "paths": {
    "/api/applications": {
      "post": {
        "tags": [
          "Applications"
        ],
        "operationId": "CreateApplicationEndpoint",
        "requestBody": {
          "x-name": "SoftwareStatementRegistrationDocumentModel",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SoftwareStatementRegistrationDocumentModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDirectAccessApplicationManifest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "GetAllApplicationsEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountDirectAccessApplicationManifest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/applications/{applicationId}/accounts": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "GetAccountsEndpoint",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/applications/{applicationId}/accounts/{accountId}/transactions": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "GetAccountTransactionsEndpoint",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageSlice"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/applications/{applicationId}/authorizationUrl": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "GetApplicationAuthorizationUrlEndpoint",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/applications/{applicationId}/registrationUrl": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "GetApplicationRegistrationUrlEndpoint",
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/applications/handleCallbackFlow": {
      "post": {
        "tags": [
          "Applications"
        ],
        "operationId": "HandleCallbackFlowDataEndpoint",
        "requestBody": {
          "x-name": "HandleCallbackDataRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HandleCallbackDataRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HandleCallbackDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/applications/registerSoftwareStatement": {
      "patch": {
        "tags": [
          "Applications"
        ],
        "operationId": "RegisterSoftwareStatementEndpoint",
        "requestBody": {
          "x-name": "RegisterSoftwareStatementRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterSoftwareStatementRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDirectAccessApplicationManifest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountDirectAccessApplicationManifest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "targetEnvironment",
          "softwareStatementRegistrationDocument"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "targetEnvironment": {
            "type": "string"
          },
          "softwareStatementRegistrationDocument": {
            "$ref": "#/components/schemas/SoftwareStatementRequest"
          },
          "softwareStatement": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountDirectAccessApplicationManifest_SoftwareStatementRegistrationResult"
              }
            ]
          },
          "applicationRegistration": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountDirectAccessApplicationManifest_ApplicationRegistrationResult"
              }
            ]
          },
          "applicationAuthorization": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountDirectAccessApplicationManifest_ApplicationAuthorizationResult"
              }
            ]
          }
        }
      },
      "SoftwareStatementRequest": {
        "type": "object",
        "description": "Request for SoftwareStatement registration.\n            ",
        "additionalProperties": {},
        "required": [
          "softwareName",
          "softwareId",
          "softwareVersion",
          "redirectUris",
          "registrationBackUri",
          "contacts",
          "softwareNameEn",
          "softwareUri",
          "tokenEndpointAuthMethod",
          "grantTypes",
          "responseTypes",
          "logoUri",
          "tosUri",
          "policyUri"
        ],
        "properties": {
          "softwareName": {
            "type": "string",
            "description": "Software Name in CZ.\n            ",
            "maxLength": 50,
            "minLength": 5
          },
          "softwareNameEn": {
            "type": "string",
            "description": "Software Name in EN.\n            ",
            "maxLength": 50,
            "minLength": 5
          },
          "softwareId": {
            "type": "string",
            "description": "A unique identifier string (e.g., a Universally Unique Identifier (UUID)) assigned by the client developer or software publisher used by registration endpoints to identify the\nclient software to be dynamically registered.\n            ",
            "maxLength": 64,
            "minLength": 0
          },
          "softwareVersion": {
            "type": "string",
            "description": "A version identifier string for the client software identified by softwareId.  The value of the softwareVersion SHOULD change on any update to the client software identified\nby the same softwareId.\n            ",
            "maxLength": 30,
            "minLength": 1
          },
          "softwareUri": {
            "type": "string",
            "description": "Software URL.\n            ",
            "format": "uri"
          },
          "redirectUris": {
            "type": "array",
            "description": "Array of redirection URI strings for use in redirect-based flows such as the authorization code.\n            ",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "tokenEndpointAuthMethod": {
            "type": "string",
            "description": "String indicator of the requested authentication method for the token endpoint.\n            "
          },
          "grantTypes": {
            "type": "array",
            "description": "Array of OAuth 2.0 grant type strings that the client can use.\n            ",
            "items": {
              "type": "string"
            }
          },
          "responseTypes": {
            "type": "array",
            "description": "Array of the OAuth 2.0 response type strings that the client can use at the authorization endpoint.\n            ",
            "items": {
              "type": "string"
            }
          },
          "registrationBackUri": {
            "type": "string",
            "description": "URI string representing the endpoint where registration data is sent.\n            ",
            "format": "uri"
          },
          "contacts": {
            "type": "array",
            "description": "Array of strings representing ways to contact people responsible for this client, typically email addresses.\n            ",
            "maxItems": 2,
            "minItems": 1,
            "items": {
              "type": "string"
            }
          },
          "logoUri": {
            "type": "string",
            "description": "URL string that references a logo for the client.\n            ",
            "format": "uri"
          },
          "tosUri": {
            "type": "string",
            "description": "URL string that points to a human-readable terms of service document for the client that describes a contractual relationship between the end-user and the client that the\nend-user accepts when authorizing the client.\n            ",
            "format": "uri"
          },
          "policyUri": {
            "type": "string",
            "description": "URL string that points to a human-readable privacy policy document that describes how the deployment organization collects, uses, retains, and discloses personal data.\n            ",
            "format": "uri"
          }
        }
      },
      "AccountDirectAccessApplicationManifest_SoftwareStatementRegistrationResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "jwt",
          "validToUtc"
        ],
        "properties": {
          "jwt": {
            "type": "string"
          },
          "validToUtc": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AccountDirectAccessApplicationManifest_ApplicationRegistrationResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "clientId",
          "clientSecret"
        ],
        "properties": {
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          },
          "registrationClientUri": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AccountDirectAccessApplicationManifest_ApplicationAuthorizationResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "refreshToken",
          "refreshTokenExpirationUtc"
        ],
        "properties": {
          "refreshToken": {
            "type": "string"
          },
          "refreshTokenExpirationUtc": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SoftwareStatementRegistrationDocumentModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "softwareName",
          "softwareNameEn",
          "softwareVersion",
          "contacts",
          "softwareUri",
          "policyUri",
          "tosUri",
          "logoUri",
          "registrationBackUri",
          "redirectUris",
          "generateSoftwareId",
          "softwareId"
        ],
        "properties": {
          "generateSoftwareId": {
            "type": "boolean"
          },
          "softwareName": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": false
          },
          "softwareNameEn": {
            "type": "string",
            "maxLength": 50,
            "minLength": 0,
            "nullable": false
          },
          "softwareId": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "softwareVersion": {
            "type": "string",
            "maxLength": 30,
            "minLength": 0,
            "nullable": false
          },
          "contacts": {
            "type": "array",
            "minLength": 1,
            "nullable": false,
            "items": {
              "type": "string"
            }
          },
          "softwareUri": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "policyUri": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "tosUri": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "logoUri": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "registrationBackUri": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "redirectUris": {
            "type": "array",
            "minLength": 1,
            "nullable": false,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "description": "the dto used to send an error response to the client",
        "additionalProperties": false,
        "required": [
          "statusCode",
          "message",
          "errors"
        ],
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "the http status code sent to the client. default is 400.",
            "format": "int32",
            "default": 400
          },
          "message": {
            "type": "string",
            "description": "the message for the error response",
            "default": "One or more errors occurred!"
          },
          "errors": {
            "type": "object",
            "description": "the collection of errors for the current context",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "Account": {
        "type": "object",
        "additionalProperties": {},
        "required": [
          "accountId",
          "iban",
          "currency"
        ],
        "properties": {
          "accountId": {
            "type": "string",
            "maxLength": 400,
            "minLength": 0
          },
          "iban": {
            "type": "string",
            "maxLength": 34,
            "minLength": 0
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "minLength": 0
          },
          "nameI18N": {
            "type": "string",
            "nullable": true
          },
          "productI18N": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ApplicationRequestBase": {
        "type": "object",
        "additionalProperties": false
      },
      "PageSlice": {
        "type": "object",
        "description": "The list of transactions on the client's account according to the filter set in the request.",
        "additionalProperties": {},
        "required": [
          "content",
          "totalPages",
          "pageNumber",
          "pageSize",
          "numberOfElements",
          "first",
          "last",
          "empty"
        ],
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTransaction"
            }
          },
          "totalPages": {
            "type": "integer",
            "description": "Total number of pages.",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "description": "Actual page number. Number of the first page is 0.",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Size of the page (how many elements are shown per page).",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "description": "Number of elements on the current page.",
            "format": "int32"
          },
          "first": {
            "type": "boolean",
            "description": "Is the first page."
          },
          "last": {
            "type": "boolean",
            "description": "Is the last page."
          },
          "empty": {
            "type": "boolean",
            "description": "Is actual page empty."
          }
        }
      },
      "AccountTransaction": {
        "type": "object",
        "description": "The single account transaction details.",
        "additionalProperties": {},
        "required": [
          "lastUpdated",
          "accountType",
          "iban",
          "creditDebitIndicator",
          "transactionType",
          "amount"
        ],
        "properties": {
          "lastUpdated": {
            "type": "string",
            "description": "The last transaction history update. Datetime is in ISO 8601 format.",
            "format": "date-time"
          },
          "accountType": {
            "$ref": "#/components/schemas/AccountType"
          },
          "entryReference": {
            "type": "string",
            "nullable": true
          },
          "iban": {
            "type": "string",
            "maxLength": 34,
            "minLength": 0
          },
          "creditDebitIndicator": {
            "$ref": "#/components/schemas/CreditDebitIndicator"
          },
          "transactionType": {
            "$ref": "#/components/schemas/TransactionType"
          },
          "bankTransactionCode": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BankTransactionCode"
              }
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/CurrencyAmount"
          },
          "bookingDate": {
            "type": "string",
            "description": "The date the payment was processed/accounted by bank in ISODate format (''YYYY-MM-DD'').",
            "format": "date-time",
            "nullable": true
          },
          "valueDate": {
            "type": "string",
            "description": "The payment due date in ISODate format (''YYYY-MM-DD'').",
            "format": "date-time",
            "nullable": true
          },
          "instructed": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyAmount"
              }
            ]
          },
          "reversalIndicator": {
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the payment on account from bank point of view.",
            "nullable": true
          },
          "counterParty": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TransactionCounterparty"
              }
            ]
          },
          "references": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TransactionReferences"
              }
            ]
          },
          "additionalTransactionInformation": {
            "type": "string",
            "description": "Additional information about transaction provided by bank",
            "maxLength": 500,
            "minLength": 0,
            "nullable": true
          },
          "cardTransactionDetails": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardTransactionDetails"
              }
            ]
          }
        }
      },
      "AccountType": {
        "type": "string",
        "description": "Type of bank account.\nCODE:\n* KB - KB accounts\n* AG - aggregate accounts",
        "x-enumNames": [
          "KB",
          "AG"
        ],
        "enum": [
          "KB",
          "AG"
        ]
      },
      "CreditDebitIndicator": {
        "type": "string",
        "description": "Indicates whether the account balance is positive or negative\n\nCODE:\n* CREDIT - Accontunt balance is &gt; 0 or Account ballance = 0\n* DEBIT - Account balance is &lt; 0",
        "x-enumNames": [
          "CREDIT",
          "DEBIT"
        ],
        "enum": [
          "CREDIT",
          "DEBIT"
        ]
      },
      "TransactionType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "INTEREST",
          "FEE",
          "DOMESTIC",
          "FOREIGN",
          "SEPA",
          "CASH",
          "CARD",
          "OTHER"
        ],
        "enum": [
          "INTEREST",
          "FEE",
          "DOMESTIC",
          "FOREIGN",
          "SEPA",
          "CASH",
          "CARD",
          "OTHER"
        ]
      },
      "BankTransactionCode": {
        "type": "object",
        "description": "Transaction code",
        "additionalProperties": {},
        "properties": {
          "code": {
            "type": "string",
            "description": "Transaction code",
            "maxLength": 35,
            "minLength": 0,
            "nullable": true
          },
          "issuer": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BankTransactionCodeIssuer"
              }
            ]
          }
        }
      },
      "BankTransactionCodeIssuer": {
        "type": "string",
        "description": "The identification of the issuer of the transaction code\n- CBA - Code of the transaction defined by CBA (Czech Bank Association) associated with specific payment. Every bank uses its own LOV for transaction codes which is derived from 1st to 3rd level of the transaction codes LOV defined by CBA standar for CAMT.053. For more information see https://mojebanka.kb.cz/file/cs/format_xml_vypis_ciselnik_trn.pdf\n- OTHER",
        "x-enumNames": [
          "CBA",
          "OTHER"
        ],
        "enum": [
          "CBA",
          "OTHER"
        ]
      },
      "CurrencyAmount": {
        "type": "object",
        "description": "Amount with ISO currency.",
        "additionalProperties": {},
        "properties": {
          "value": {
            "type": "number",
            "description": "The amount.",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "TransactionCounterparty": {
        "type": "object",
        "description": "Transaction counterparty details. Not all fields may be available for all transactions (e.g. for card transaction).",
        "additionalProperties": {},
        "properties": {
          "iban": {
            "type": "string",
            "maxLength": 34,
            "minLength": 0,
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the counterparty",
            "nullable": true
          },
          "accountNo": {
            "type": "string",
            "maxLength": 34,
            "minLength": 0,
            "nullable": true
          },
          "bankBic": {
            "type": "string",
            "maxLength": 11,
            "minLength": 0,
            "nullable": true
          },
          "bankCode": {
            "type": "string",
            "maxLength": 4,
            "minLength": 0,
            "nullable": true
          },
          "bankName": {
            "type": "string",
            "description": "Counterparty account servicing institution name.",
            "nullable": true
          }
        }
      },
      "TransactionReferences": {
        "type": "object",
        "description": "Transaction references",
        "additionalProperties": {},
        "properties": {
          "accountServicer": {
            "type": "string",
            "description": "Identification of the payment assigned by bank",
            "nullable": true
          },
          "endToEndIdentification": {
            "type": "string",
            "description": "Unique identification of the payment/transaction provided by the client who initiated the payment",
            "nullable": true
          },
          "variable": {
            "type": "string",
            "description": "Variable symbol",
            "nullable": true
          },
          "constant": {
            "type": "string",
            "description": "Constant symbol",
            "nullable": true
          },
          "specific": {
            "type": "string",
            "description": "Specific symbol",
            "nullable": true
          },
          "receiver": {
            "type": "string",
            "description": "Message to a payee / reference to receiver.",
            "nullable": true
          },
          "myDescription": {
            "type": "string",
            "description": "Description for me",
            "nullable": true
          }
        }
      },
      "CardTransactionDetails": {
        "type": "object",
        "description": "Details related to a CARD transaction",
        "additionalProperties": {},
        "properties": {
          "holdExpirationDate": {
            "type": "string",
            "description": "Expiration date of a pending state transaction. ISO 8601 format.",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "GetAccountTransactionsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationRequestBase"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "HandleCallbackDataResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "updatedApplication"
        ],
        "properties": {
          "redirectUri": {
            "type": "string",
            "nullable": true
          },
          "updatedApplication": {
            "$ref": "#/components/schemas/AccountDirectAccessApplicationManifest"
          }
        }
      },
      "HandleCallbackDataRequest": {
        "type": "object",
        "additionalProperties": {},
        "required": [
          "encryptedData",
          "salt",
          "code",
          "state"
        ],
        "properties": {
          "encryptedData": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "salt": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "code": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "state": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "RegisterSoftwareStatementRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "applicationId"
        ],
        "properties": {
          "applicationId": {
            "type": "string",
            "format": "guid",
            "minLength": 1,
            "nullable": false
          }
        }
      }
    }
  }
}